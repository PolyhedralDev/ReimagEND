num randPrecision = 100;

num length = 10;
num stemRadius = 1.1;
num droop = 0.1;

str setBlock = "";

num h = 0;
num random = 0;
for (num l = 0; l <= length/2; l = l + 0.5) {

    for (num x = -stemRadius; x <= stemRadius; x = x + 1) {
        for (num y = -stemRadius; y <= stemRadius; y = y + 1) {
            for (num z = -stemRadius; z <= stemRadius; z = z + 1) {

                if (pow(x,2)+pow(y,2)+pow(z,2) < pow(stemRadius,2)) {

                block(x+l, y+h, z, "minecraft:moss_block", false);

                }
            }   
        }
    }

    block(l, h, 0, "minecraft:moss_block", true);

    h = h+(l*droop);
}

num radius = 4;
num warp = 1;
num warpFreq = 1;
num squish = 3;
num radiusSquared = pow(radius,2);

for (num x = -radius-warp; x < radius+warp; x = x + 1) {
    for (num y = (-radius-warp)/squish; y < (radius+warp)/squish; y = y + 1) {
        for (num z = -radius-warp; z < radius+warp; z = z + 1) {
            num warpX = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+1000),
                                warpFreq*(z+originZ()));
            num warpY = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+2000),
                                warpFreq*(z+originZ()));
            num warpZ = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+3000),
                                warpFreq*(z+originZ()));
			num distanceSquared = (pow(x+warpX,2)/2.5)+pow((y+warpY)*squish,2)+pow(z+warpZ,2);
            if (distanceSquared < radiusSquared) {
                block(x+length, y+((length*droop)*length/3), z, "minecraft:moss_block", true);
			}
        }
    }
}