num randPrecision = 100;
num radius = 15;
num warp = 10;
num warpFreq = 2;
num radiusSquared = pow(radius,2);
num yTranslate = 0;


for (num x = -radius-warp; x < radius+warp; x = x + 1) {
    for (num y = (-radius*2.5); y < (radius*2.5); y = y + 1) {
        for (num z = -radius-warp; z < radius+warp; z = z + 1) {
            num warpX = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+1000),
                                warpFreq*(z+originZ()));
            num warpY = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+2000),
                                warpFreq*(z+originZ()));
            num warpZ = warp * sampler("simplex3",
                                warpFreq*(x+originX()),
                                warpFreq*(y+originY()+3000),
                                warpFreq*(z+originZ()));
			num distanceSquared = pow(x+warpX,2)+pow((y+warpY)/3,2)+pow(z+warpZ,2);
            if (distanceSquared < radiusSquared) {
                block(x, y-yTranslate, z, "minecraft:obsidian", true);
			}
        }
    }
}




